version: 2.1

commands:
  install-aws-cli:
    steps:
      - run: which aws
      - run:
          name: Install AWS CLI
          command: echo "Installing AWS CLI..."

orbs:
  aws-cli: circleci/aws-cli@1.4.0

workflows:  # Collection of jobs orchestrated to run in a specific order
  version: 2.1
  build_test_and_deploy:
    jobs:
      - test
      - build
      - deploy-staging:
          requires:
            - test
            - build
      - promote-to-prod:
          type: approval
          requires:
            - deploy-staging
      - deploy-prod:
          requires:
            - promote-to-prod
  demo_runner:
    jobs:
      - build-runner
  convert_jenkins:
    jobs:
      - jenkins-build
      - deploy:
          requires:
            - jenkins-build
      - approve-promote:
          type: approval
          requires:
            - deploy
      - promote:
          requires:
            - approve-promote
      - deploy-stage:
          requires:
            - promote
      - approve-promote-stage:
          type: approval
          requires:
            - deploy-stage
      - promote-stage:
          requires:
            - approve-promote-stage

jobs:  # Collection of commands needed to accomplish a specific task
  build:
    docker:  # CircleCI supports Docker, Linux, Windows, and macOS
      - image: circleci/node:10.15
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    resource_class: large  # Options range from small to 2xlarge+
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Log in to Docker Hub
          command: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run: 
          name: Build Docker image
          command: docker build -t olukotunts/app:$CIRCLE_SHA1 .
      - run:
          name: Push Docker image to Docker Hub
          command: docker push olukotunts/app:$CIRCLE_SHA1
  test:
    docker:
      - image: circleci/node:10.15
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS    
    steps:
      - checkout
      - run: npm install
      - run: npm test
  deploy-staging:
    docker:
      - image: circleci/node:10.15
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Log in to Docker Hub
          command: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Pull Docker image from Docker Hub
          command: docker pull olukotunts/app:$CIRCLE_SHA1
      - run:
          name: Install Heroku CLI
          command: curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Log in to Heroku Container Registry
          command: heroku container:login
      - run:
          name: Tag Docker image
          command: docker tag olukotunts/app:$CIRCLE_SHA1 registry.heroku.com/name-button-staging/web
      - run:
          name: Push Docker image to Heroku
          command: docker push registry.heroku.com/name-button-staging/web
      - run:
          name: Deploy Docker image to Heroku
          command: heroku container:release --app name-button-staging web
  deploy-prod:
    docker:
      - image: circleci/node:10.15
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Log in to Docker Hub
          command: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Pull Docker image from Docker Hub
          command: docker pull olukotunts/app:$CIRCLE_SHA1
      - run:
          name: Install Heroku CLI
          command: curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Log in to Heroku Container Registry
          command: heroku container:login
      - run:
          name: Tag Docker image
          command: docker tag olukotunts/app:$CIRCLE_SHA1 registry.heroku.com/name-button/web
      - run:
          name: Push Docker image to Heroku
          command: docker push registry.heroku.com/name-button/web
      - run:
          name: Deploy Docker image to Heroku
          command: heroku container:release --app name-button web
  build-runner:
    machine: true
    resource_class: sandboxi/runner
    steps:
      - checkout
      - run: printenv
  jenkins-build:
    machine: true
    steps:
      - checkout
      - aws-cli/setup
      - run: ls -al $HOME/project.circleci/scripts
      - run: chmod -R +x $HOME/project/.circleci/scripts/
      - run: ls -al $HOME/project.circleci/scripts
      - run: $HOME/project/.circleci/scripts/build.sh
  deploy:
    machine: true
    steps:
      - checkout
      - aws-cli/setup
      - run: ls -al $HOME/project.circleci/scripts
      - run: chmod -R +x $HOME/project/.circleci/scripts/
      - run: ls -al $HOME/project.circleci/scripts
      - run: $HOME/project/.circleci/scripts/deploy.sh
  promote:
    machine: true
    steps:
      - checkout
      - aws-cli/setup
      - run: ls -al $HOME/project.circleci/scripts
      - run: chmod -R +x $HOME/project/.circleci/scripts/
      - run: ls -al $HOME/project.circleci/scripts
      - run: $HOME/project/.circleci/scripts/promote.sh
  deploy-stage:
    machine: true
    steps:
      - checkout
      - aws-cli/setup
      - run: ls -al $HOME/project.circleci/scripts
      - run: chmod -R +x $HOME/project/.circleci/scripts/
      - run: ls -al $HOME/project.circleci/scripts
      - run: $HOME/project/.circleci/scripts/deploy-stage.sh
  promote-stage:
    machine: true
    steps:
      - checkout
      - aws-cli/setup
      - run: ls -al $HOME/project.circleci/scripts
      - run: chmod -R +x $HOME/project/.circleci/scripts/
      - run: ls -al $HOME/project.circleci/scripts
      - run: $HOME/project/.circleci/scripts/promote-stage.sh